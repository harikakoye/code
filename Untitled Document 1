# Every test file has one or more tests...
---
test_name: Get some fake data from the JSON placeholder Need API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID1
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/need/
      method: POST
      json:
        need_type: "Paying Guest"
        desired_time: "within one month"
        desired_budget_min: "4500"
        desired_budget_max: "1000001"
        customer_notes: ""
        propertytype_id: 1
        customer_id: 2
        start_date: "09-19-2019"
        location: [{"long_name": "Vile Parle East","short_name":"Vile Parle East","types":["sublocality_level_2","sublocality","political"]},{"long_name":"Vile Parle","short_name":"Vile Parle","types":["sublocality_level_1","sublocality","political"]},{"long_name":"Mumbai","short_name":"Mumbai","types":["locality","political"]},{"long_name":"Mumbai Suburban","short_name":"Mumb Suburban","types":["administrative_area_level_2","political"]},{"long_name":"Maharashtra","short_name":"MH","types":["administrative_area_level_1","political"]},{"long_name":"India","short_name":"IN","types":["country","political"]}]
        lat: 17.3457176
        lng: 78.5522296
        formatted_address: "LB Nagar, Hyderabad, Telangana, India"
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Need was posted successfully"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder need API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID2
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/need/?need_id=69
      method: GET
      headers:
        content-type: application/json

    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder MyNeeds API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID3
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/myneeds/
      method: POST
      json:
        customer_id: 2
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder need_agent_rating API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID4
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/need_agent_rating/
      method: POST
      json:
        user_from_id: 22
        user_to_id: 23
        need_id: 71
        rating: 5
        comment: " "
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Rated successfully"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder Need_Agent_Rating API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID5
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/need_agent_rating/?need_id=71&user_from_id=22&user_to_id=23
      method: GET
      headers:
        content-type: application/json

    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder get_matched_users API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID6
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/get_matched_users/?need_id=69
      method: GET
      headers:
        content-type: application/json

    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder get_matched_needs API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID7
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/get_matched_needs/?user_id=23
      method: GET
      headers:
        content-type: application/json

    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder mark_need_interested API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID8
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/mark_need_interested/
      method: POST
      json:
        type: "agent"
        need_id: 58
        user_id: 26
        msg: "hii"
        listing_id_1: 20
        listing_id_2: 17
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Interest Marked"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder mark_need_engaged API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID9
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/mark_need_engaged/
      method: POST
      json:
        user_id: 26
        type: "customer"
        need_id: 58
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "User Engaged"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder follow_up API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID10
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/follow_up/
      method: POST
      json:
        type: "agent"
        need_id: 69
        user_from: 9
        user_to: 44
        message: "follows"
        listing_id_1: 121
        listing_id_2: 165
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Followed Up"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder need_expired API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID11
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/need_expired/
      method: POST
      json:
        need_id: 69
        customer_id: 2
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 400
      body:
        response: "Need is no longer active"
        statuscode: "134"
        status: "error"
---
test_name: Get some fake data from the JSON placeholder remark API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID12
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/agentremark/?need_id=28&from_user_id=23
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder remark API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID13
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/agentremark/
      method: POST
      json:
        from_user_id: 4
        need_id: 67
        remark: "bad"
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Agent Remark posted successfully"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder del_remark API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID14
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/del_remark/
      method: POST
      json:
        NeedRemark_id: 2
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder reminder API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID15
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/reminder/?need_id=28&user_id=23
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder reminder API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID16
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/reminder/
      method: POST
      json:
        need_id: 19
        user_id: 29
        date: "2018-08-12"
        time: "10:18:00"
        message: "reminds me"
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "NeedReminder added successfully"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder del_reminder API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID17
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/del_reminder/
      method: POST
      json:
        reminder_id: 151
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder need_activities API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID18
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/need_activities/?need_id=69&to_user_id=4
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder register_call API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID19
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/register_call/?type=agent&need_id=58&from_user_id=6&to_user_id=4
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "call registered"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder ignore API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID20
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/ignore/
      method: POST
      json:
        need_id: 8
        user_id: 6
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder suggestion API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID21
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/suggestion/?need_id=25&user_id=2
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder show_contact API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID22
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/show_contact/?need_id=28&user_id=23
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder show_needhistory API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID23
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/show_needhistory/
      method: POST
      json:
        customer_id: 2
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder Listing API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID24
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing/
      method: POST
      json:
        user_id: 6
        propertytype_id: 1
        transactiontype_id: 4
        property_ownership_id: 4
        occupancy_status_id: 2
        start_date: 05-09-2018
        engage_agents: 1
        expected_price: 876580
        project_name: goldpillar
        description: jhdgjkrhgjkr
        built_year: 2000
        available_from_month: 7
        available_from_year: 2018
        all_price_included: True
        listingcategory: [4]
        package_id: 1
        pricing_config: [{"pricing_id":"1","value":"500","all_included":1,"currency":"rupees"}]
        amenities: [3,18]
        address: {"line1":"kphb main road","line2":"bhagyanagar colony","city":"hyderabad","state":"telangana","country":"India","landmark":"violet purple","pincode":500018,"lat":15.8690415,"lng":72.7366859}
        configs: [{"config_id":"1","value":"3"},{"config_id":"2","value":"3","unit_id":"5"}]
        location : [{"long_name":"bagyanagar","short_name":"bagyanagar","types":["sublocality_level_2","sublocality","political"]},{"long_name":"kphb","short_name":"kphb","types":["sublocality_level_1","sublocality","political"]},{"long_name":"hyderabad","short_name":"hyderabad","types":["locality","political"]},{"long_name":"trs office","short_name":"trs office","types":["administrative_area_level_2","political"]},{"long_name":"telangana","short_name":"TEL","types":["administrative_area_level_1","political"]},{"long_name":"India","short_name":"IN","types":["country","political"]}]
        lat: 16.8690415
        lng: 80.7366859
        formatted_address: "Reddigudem, Andhra Pradesh 521215, India"
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID25
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing/?listing_id=123&user_id=10
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder edit_listing API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID26
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/edit_listing/
      method: POST
      json:
        title: "goldpillar"
        listing_status: "open"
        listing_id: 29
        user_id: 24
        propertytype_id: 3
        transactiontype_id: 4
        property_ownership_id: 3
        occupancy_status_id: 2
        package_id: 2
        built_year: 1995
        available_from_month: 3
        available_from_year: 2018
        expected_price: 100000
        engage_agents: 1
        description: "listing desc"
        listingcategory: [1]
        configs: [{"config_id":"2","value":"3","unit":"3"}]
        amenities: [3,18]
        address: {"line1":"kphb main road","line2":"bhagyanagar colony","city":"hyderabad","state":"telangana","country":"India","landmark":"violet purple","pincode":500018,"lat":15.8690415,"lng":72.7366859}
        pricing_config: [{"pricing_id":"2","value":"500","all_included":1,"currency":"rupees"}]
        location : [{"long_name":"bagyanagar","short_name":"bagyanagar","types":["sublocality_level_2","sublocality","political"]},{"long_name":"kphb","short_name":"kphb","types":["sublocality_level_1","sublocality","political"]},{"long_name":"hyderabad","short_name":"hyderabad","types":["locality","political"]},{"long_name":"trs office","short_name":"trs office","types":["administrative_area_level_2","political"]},{"long_name":"telangana","short_name":"TEL","types":["administrative_area_level_1","political"]},{"long_name":"India","short_name":"IN","types":["country","political"]}]
        lat: 17.4833526
        lng: 78.3870668
        formatted_address: "kphb colony, hyderabad, telangana 522014, India"
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Listing was edited successfully"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder mylisting API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID27
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/mylisting/
      method: POST
      json:
        user_id: 6
        need_id: 338
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder show_listinghistory API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID28
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/show_listinghistory/
      method: POST
      json:
        user_id: 4
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing_metadata API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID29
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_metadata/
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing_config API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID30
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_config/?property_type_id=5&transaction_type_id=3
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing_amenities API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID31
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_amenities/?property_type_id=5
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder get_listing_user API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID32
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/get_listing_user/?listing_id=149
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder get_matched_listing API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID33
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/get_matched_listing/?user_id=29
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder mark_listing_interested API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID34
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/mark_listing_interested/
      method: POST
      json:
        user_id: 23
        type: "agent"
        message: "hii"
        listing_id: 81
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Interest Marked"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder mark_listing_engaged API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID35
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/mark_listing_engaged/
      method: POST
      json:
        user_id: 23
        type: "customer"
        listing_id: 81
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "User Engaged"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing_ignore API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID36
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_ignore/
      method: POST
      json:
        user_id: 23
        listing_id: 141
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "ListingIgnore success"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing_remark API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID37
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_remark/?listing_id=136&from_user_id=13
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder Listing_Remark API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID38
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_remark/
      method: POST
      json:
        from_user_id: 4
        listing_id: 54
        remark: "bad"
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Remark posted successfully"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder dellist_remark API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID39
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/dellist_remark/
      method: POST
      json:
        "listingRemark_id": 2
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing_reminder API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID40
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_reminder/?listing_id=146&user_id=29
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder Listing_Reminder API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID41
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_reminder/
      method: POST
      json:
        "listing_id": 88
        "user_id": 23
        "date": "2018-09-20"
        "time": "6:17:08"
        "message": "reminds me"
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Reminder added successfully"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder dellist_reminder API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID42
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/dellist_reminder/
      method: POST
      json:
        "reminder_id": 46
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder remove_media API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID43
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/remove_media/
      method: POST
      json:
        "listing_id": 51
        "media_id": 50
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 400
      body:
        response: "Media Does Not Exist"
        statuscode: "128"
---
test_name: Get some fake data from the JSON placeholder rating API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID44
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/rating/?listing_id=149&user_from_id=9&user_to_id=4
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder Rating API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID45
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/rating/
      method: POST
      json:
        "user_from_id": 10
        "user_to_id": 23
        "listing_id": 19
        "rating": 3
        "comment": " "
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Rated successfully"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing_expired API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID46
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_expired/
      method: POST
      json:
        "listing_id": 73
        "user_id": 10
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 400
      body:
        response: "Listing is no longer active"
        statuscode: "130"
        status: "error"
---
test_name: Get some fake data from the JSON placeholder listfollow_up API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID47
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listfollow_up/
      method: POST
      json:
        "type": "customer"
        "listing_id": 162
        "user_from": 4
        "user_to": 23
        "message": " "
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Followed Up"
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing_activities API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID48
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_activities/?listing_id=149&to_user_id=9
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder showlist_contact API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID49
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/showlist_contact/?listing_id=149&user_id=9
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing_video API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID50
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing/add/video/
      method: POST
      json:
        name: "home overview"
        listing_id: 300
        url: "https://www.youtube.com/watch?v=6xU_fTSAR-E"
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 400
      body:
        response: "Listing already has video, try to delete to add new."
        statuscode: "122"
        status: "error"
---
test_name: Get some fake data from the JSON placeholder listing_media API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID51
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing/add/photo/
      method: POST
      data:
        media_type: Advertisement Photo
        listing_id: 310
        tag: Interior View
        file: "home/harika/Documents/images/3.jpg"
        #path: "home/harika/Documents/images/3.jpg"
      #headers:
        #content-type: application/json
        #consumes: multipart/form-data
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder search API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID52
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing/search/
      method: POST
      json:
        lat: 19.361899
        lng: 79.2930312
        property_type: ["Service Apartments"]
        transaction_type: ["Paying Guest"]
        min_budget: 5000
        max_budget: 100000
        amenities: [{"id":"20"}]
        config: [{"id":"1","value":"3"}]
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing_pricing API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID53
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_pricing/
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder search_listing_filters API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID54
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/search_listing_filters/
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder viewwallet API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID55
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/viewwallet/?user_id=9
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder listing_mediatags API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID56
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/listing_mediatags/?property_type_id=2
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder similar_listings API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID57
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/similar_listings/
      method: POST
      json:
        listing_id: 326
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder suggestion_search API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID58
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/suggestion_search/
      method: POST
      json:
        key: bedrooms
        user_id: 24
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder get_needalert API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID59
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/get_needalert/?user_id=22&need_id=364
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder get_needalert API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID60
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/get_needalert/?need_alert_id=1175
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder get_listingalert API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID61
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/get_listingalert/?listing_alert_id=383
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder get_listingalert API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID62
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/get_listingalert/?listing_id=333&user_id=6
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder get_allalerts API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID63
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/get_allalerts/?user_id=6
      method: GET
      headers:
        content-type: application/json
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        status: "success"
---
test_name: Get some fake data from the JSON placeholder mark_alert API
# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: Make sure we have the right ID64
    # Define the request to be made...
    request:
      url: http://dev.goldpillar.com/api/mark_alert/
      method: POST
      json:
        type: "listing_alert"
        alert_id: 81
    # ...and the expected response code and body
    response:
      status_code: 200
      body:
        response: "Alert Read"
        status: "success"
---

